#include <bits/stdc++.h>
using namespace std;

#define MAXN 10
#define MAXM 1000
#define INF 2000000000

long long ipow(long long b, long long e) {
	if (e == 0) {
		return 1;
	} else if (e % 2 == 0) {
		return ipow(b * b, e / 2);
	} else {
		return ipow(b * b, e / 2) * b;
	}
}

int main() {
	long long N, M, C[MAXM], S[MAXM];
	long long DP[1 << MAXN];
	cin >> N >> M;
	for (int i = 0; i < M; i++) {
		string s;
		cin >> s;
		cin >> C[i];
		S[i] = 0;
		for (int j = 0; j < N; j++) {
			S[i] <<= 1;
			S[i] += s[j] == 'Y' ? 1 : 0;
		}
	}
	for (int i = 0; i < (1 << N); i++) {
		DP[i] = INF;
	}
	DP[0] = 0;
	for (int i = 0; i < M; i++) {
		for (int j = 0; j < (1 << N); j++) {
			long long nj = j | S[i];
			long long nc = DP[j] + C[i];
			DP[nj] = min(DP[nj], nc);
		}
	}
	cout << (DP[(1 << N) - 1] == INF ? -1 : DP[(1 << N) - 1]) << endl;
	return 0;
}
