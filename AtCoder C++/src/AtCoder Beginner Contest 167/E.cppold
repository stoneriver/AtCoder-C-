#include<bits/stdc++.h>
using namespace std;
const int mod = 998244353;

// オーダーO(N)だけどどっかにバグあるっぽい。もう疲れたのでやめる。
//int main() {
//	int N, M, K;
//	cin >> N >> M >> K;
//	int ans = 0;
//	int prev = M * pow(M - 1, N - 1);
//	ans += prev;
//	ans %= mod;
//	for (int i = 0; i < K; i++) {
//		prev *= (N - 1 - i) / (M - 1) / (i + 1);
//		ans %= mod;
//	}
//	cout << ans << endl;
//	return 0;
//}

// 動的計画法を使った解法。オーダーがO(N^2)なのとどっかでバグがあるらしくて正解できない。
//#include <bits/stdc++.h>
//using namespace std;
//
//const int mod = 998244353;
//
//int main() {
//	int N, M, K;
//	cin >> N >> M >> K;
//	int DP[N + 1][K + 1];
//	DP[1][0] = M;
//	for (int i = 2; i <= N; i++) {
//		DP[i][0] = (DP[i - 1][0] * (M - 1)) % mod;
//	}
//	for (int j = 0; j <= K; j++) {
//		DP[0][j] = 0;
//	}
//	for (int j = 1; j <= K; j++) {
//		for (int i = 1; i <= N; i++) {
//			DP[i][j] = (DP[i - 1][j - 1]) % mod + (DP[i - 1][j] * (M - 1)) % mod;
//		}
//	}
//	int ans = 0;
//	for (int j = 0; j <= K; j++) {
//		ans += (DP[N][j]) % mod;
//	}
//	cout << ans << endl;
//	return 0;
//}
